// MultipleDispatchATL.idl : IDL source for MultipleDispatchATL
//

// This file will be processed by the MIDL tool to
// produce the type library (MultipleDispatchATL.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";

[
	object,
	uuid(d9fe7982-a648-4bc6-9b2b-a7d51adb8a63),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface ISimpleObject : IDispatch
{
	[id(1)] HRESULT Method1([in] BSTR str, [out, retval] BSTR* ret);
};
[
	object,
	uuid(80faa31e-8e30-4711-9f7a-e530836f5be5),
	dual,
	nonextensible,
	pointer_default(unique)
]
//interface ISimpleObject2 : IDispatch
// add-2nd-interface
interface ISimpleObject2 : ISimpleObject
{
	//[id(1)] HRESULT Method2([in] int n, [out, retval] int* ret);
	// add-2nd-interface (changed the id because 1 is already used by ISimpleObject::Method1()
	[id(2)] HRESULT Method2([in] int n, [out, retval] int* ret);
};
[
	uuid(8deb85d1-cbbc-4cda-bfed-6e348e79df19),
	version(1.0),
]
library MultipleDispatchATLLib
{
	importlib("stdole2.tlb");
	[
		uuid(77199078-c6c5-4017-b20d-183ac1f414de)
	]
	coclass SimpleObjectXO
	{
		//[default] interface ISimpleObject;
		// add-2nd-interface
		[default] interface ISimpleObject2;
		interface ISimpleObject;
	};
};

import "shobjidl.idl";
import "shobjidl.idl";
